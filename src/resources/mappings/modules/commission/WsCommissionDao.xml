<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.commission.dao.WsCommissionDao">
    
	<sql id="wsCommissionColumns">
		a.id AS "id",
		a.agent1_consume AS "agent1Consume",
		a.agent1_consume_scale AS "agent1ConsumeScale",
		a.agent2_consume AS "agent2Consume",
		a.agent2_consume_scale AS "agent2ConsumeScale",
		a.agent3_consume AS "agent3Consume",
		a.agent3_consume_scale AS "agent3ConsumeScale",
		a.status AS "status",
		a.agent1_promotion AS "agent1Promotion",
		a.agent2_promotion AS "agent2Promotion",
		a.member_id AS "memberId.id",
		a.agent3_promotion AS "agent3Promotion",
		a.member_parent AS "memberParent.id",
		a.order_item_id AS "orderItemId.id",
		a.member_parent_parent AS "memberParentParent.id",
		a.member_parent_parent_parent AS "memberParentParentParent.id",
		a.order_id AS "orderId.id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.mp_balance_before AS "mpBalanceBefore",
		a.remarks AS "remarks",
		a.mpp_balance_before AS "mppBalanceBefore",
		a.del_flag AS "delFlag",
		a.mppp_balance_before AS "mpppBalanceBefore",
		a.mp_balance_after AS "mpBalanceAfter",
		a.mpp_balance_after AS "mppBalanceAfter",
		a.mppp_balance_after AS "mpppBalanceAfter",
		o.order_sn AS "orderId.orderSn",
		o.paytime AS "orderId.paytime",
		o.really_price AS "orderId.reallyPrice",
		m1.nickname AS "memberId.nickname",
		m1.headimgurl AS "memberId.headimgurl",
		m2.nickname AS "memberParent.nickname",
		m3.nickname AS "memberParentParent.nickname",
		m4.nickname AS "memberParentParentParent.nickname"
	</sql>
	
	<sql id="wsCommissionJoins">
		LEFT JOIN ws_order_item i ON i.id = a.order_item_id
		LEFT JOIN ws_order o ON o.id = a.order_id
		LEFT JOIN ws_member m1 ON m1.id = a.member_id
		LEFT JOIN ws_member m2 ON m2.id = a.member_parent
		LEFT JOIN ws_member m3 ON m3.id = a.member_parent_parent
		LEFT JOIN ws_member m4 ON m4.id = a.member_parent_parent_parent
	</sql>
    
	<select id="get" resultType="WsCommission">
		SELECT 
			<include refid="wsCommissionColumns"/>
		FROM ws_commission a
		<include refid="wsCommissionJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="WsCommission">
		SELECT 
			<include refid="wsCommissionColumns"/>
		FROM ws_commission a
		<include refid="wsCommissionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="orderId != null and orderId.id != null and orderId.id != ''">
				AND a.order_id = #{orderId.id}
			</if>
			<if test="orderId != null and orderId.orderSn != null and orderId.orderSn != ''">
				AND o.order_sn like 
				<if test="dbName == 'oracle'">'%'||#{orderId.orderSn}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{orderId.orderSn}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{orderId.orderSn},'%')</if>
			</if>
			<if test="memberParent != null and memberParent.nickname != null and memberParent.nickname != ''">
				AND (m2.nickname like 
					<if test="dbName == 'oracle'">'%'||#{memberParent.nickname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{memberParent.nickname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{memberParent.nickname},'%')</if>
				or m3.nickname like 
				<if test="dbName == 'oracle'">'%'||#{memberParent.nickname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{memberParent.nickname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{memberParent.nickname},'%')</if>
				or m4.nickname like 
					<if test="dbName == 'oracle'">'%'||#{memberParent.nickname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{memberParent.nickname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{memberParent.nickname},'%')</if>
					)
			</if>
			
			<if test="agent1PromotionStart != null and agent1PromotionStart != ''">
				AND a.agent1_promotion &gt;= #{agent1PromotionStart}
			</if>
			<if test="agent1PromotionEnd != null and agent1PromotionEnd != ''">
				AND a.agent1_promotion &lt;= #{agent1PromotionEnd}
			</if>
			<if test="agent1ConsumeStart != null and agent1ConsumeStart != ''">
				AND a.agent1_consume  &gt;= #{agent1ConsumeStart}
			</if>
			<if test="agent1ConsumeEnd != null and agent1ConsumeEnd != ''">
				AND a.agent1_consume  &lt;= #{agent1ConsumeEnd}
			</if>
			
			<if test="agent2PromotionStart != null and agent2PromotionStart != ''">
				AND a.agent2_promotion &gt;= #{agent2PromotionStart}
			</if>
			<if test="agent2PromotionEnd != null and agent2PromotionEnd != ''">
				AND a.agent2_promotion &lt;= #{agent2PromotionEnd}
			</if>
			<if test="agent2ConsumeStart != null and agent2ConsumeStart != ''">
				AND a.agent2_consume  &gt;= #{agent2ConsumeStart}
			</if>
			<if test="agent2ConsumeEnd != null and agent2ConsumeEnd != ''">
				AND a.agent2_consume  &lt;= #{agent2ConsumeEnd}
			</if>
			
			<if test="agent3PromotionStart != null and agent3PromotionStart != ''">
				AND a.agent3_promotion &gt;= #{agent3PromotionStart}
			</if>
			<if test="agent3PromotionEnd != null and agent3PromotionEnd != ''">
				AND a.agent3_promotion &lt;= #{agent3PromotionEnd}
			</if>
			<if test="agent3ConsumeStart != null and agent3ConsumeStart != ''">
				AND a.agent3_consume  &gt;= #{agent3ConsumeStart}
			</if>
			<if test="agent3ConsumeEnd != null and agent3ConsumeEnd != ''">
				AND a.agent3_consume  &lt;= #{agent3ConsumeEnd}
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="WsCommission">
		SELECT 
			<include refid="wsCommissionColumns"/>
		FROM ws_commission a
		<include refid="wsCommissionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ws_commission(
			id,
			agent1_consume,
			agent1_consume_scale,
			agent2_consume,
			agent2_consume_scale,
			agent3_consume,
			agent3_consume_scale,
			status,
			agent1_promotion,
			agent2_promotion,
			member_id,
			agent3_promotion,
			member_parent,
			order_item_id,
			member_parent_parent,
			member_parent_parent_parent,
			order_id,
			create_by,
			create_date,
			update_by,
			update_date,
			mp_balance_before,
			remarks,
			mpp_balance_before,
			del_flag,
			mppp_balance_before,
			mp_balance_after,
			mpp_balance_after,
			mppp_balance_after
		) VALUES (
			#{id},
			#{agent1Consume},
			#{agent1ConsumeScale},
			#{agent2Consume},
			#{agent2ConsumeScale},
			#{agent3Consume},
			#{agent3ConsumeScale},
			#{status},
			#{agent1Promotion},
			#{agent2Promotion},
			#{memberId.id},
			#{agent3Promotion},
			#{memberParent.id},
			#{orderItemId.id},
			#{memberParentParent.id},
			#{memberParentParentParent.id},
			#{orderId.id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{mpBalanceBefore},
			#{remarks},
			#{mppBalanceBefore},
			#{delFlag},
			#{mpppBalanceBefore},
			#{mpBalanceAfter},
			#{mppBalanceAfter},
			#{mpppBalanceAfter}
		)
	</insert>
	
	<update id="update">
		UPDATE ws_commission SET 	
			agent1_consume = #{agent1Consume},
			agent1_consume_scale = #{agent1ConsumeScale},
			agent2_consume = #{agent2Consume},
			agent2_consume_scale = #{agent2ConsumeScale},
			agent3_consume = #{agent3Consume},
			agent3_consume_scale = #{agent3ConsumeScale},
			status = #{status},
			agent1_promotion = #{agent1Promotion},
			agent2_promotion = #{agent2Promotion},
			member_id = #{memberId.id},
			agent3_promotion = #{agent3Promotion},
			member_parent = #{memberParent.id},
			order_item_id = #{orderItemId.id},
			member_parent_parent = #{memberParentParent.id},
			member_parent_parent_parent = #{memberParentParentParent.id},
			order_id = #{orderId.id},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			mp_balance_before = #{mpBalanceBefore},
			remarks = #{remarks},
			mpp_balance_before = #{mppBalanceBefore},
			mppp_balance_before = #{mpppBalanceBefore},
			mp_balance_after = #{mpBalanceAfter},
			mpp_balance_after = #{mppBalanceAfter},
			mppp_balance_after = #{mpppBalanceAfter}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE ws_commission SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="findPriceByMembers" resultType="WsCommission">
		SELECT 
			<include refid="wsCommissionColumns"/>
		FROM ws_commission a
		<include refid="wsCommissionJoins"/>
		<where>
			AND a.member_id in
			<foreach collection="members" index="index" item="item" open="(" separator="," close=")">  
            	#{item.id}  
      	    </foreach>
		</where>
		group by a.order_id
	</select>
	
	<select id="findCommissionByMembers" resultType="WsCommission">
		SELECT 
			<include refid="wsCommissionColumns"/>,
			sum(i.quantity) as "orderId.totalQuantity",
			sum(a.agent1_consume) as "orderId.totalAgent1Consume",
			sum(a.agent2_consume) as "orderId.totalAgent2Consume",
			sum(a.agent3_consume) as "orderId.totalAgent3Consume",
			sum(a.agent1_promotion) as "orderId.totalAgent1Promotion",
			sum(a.agent2_promotion) as "orderId.totalAgent2Promotion",
			sum(a.agent3_promotion) as "orderId.totalAgent3Promotion"
		FROM ws_commission a
		<include refid="wsCommissionJoins"/>
		<where>
			AND a.member_id in
			<foreach collection="members" index="index" item="item" open="(" separator="," close=")">  
            	#{item.id}  
      	    </foreach>
		</where>
		group by a.order_id
	</select>
	
</mapper>